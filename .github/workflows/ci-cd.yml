name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18.x'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Application
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore backend/MockMate.Api.csproj
    
    - name: Build backend
      run: dotnet build backend/MockMate.Api.csproj --no-restore
    
    - name: Run unit tests
      run: dotnet test MockMate.Tests/MockMate.Tests.csproj --no-build --verbosity normal
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend
    
    - name: Build frontend
      run: npm run build
      working-directory: frontend
    
    - name: Run frontend tests
      run: npm test -- --coverage --watchAll=false
      working-directory: frontend

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Build backend for production
      run: |
        dotnet restore backend/MockMate.Api.csproj
        dotnet publish backend/MockMate.Api.csproj -c Release -o backend/publish
    
    - name: Build frontend for production
      run: |
        npm ci
        npm run build
      working-directory: frontend
    
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-artifacts
        path: backend/publish/
    
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-artifacts
        path: frontend/dist/

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-artifacts
        path: ./backend-artifacts
    
    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-artifacts
        path: ./frontend-artifacts
    
    - name: Deploy to staging
      run: |
        echo "Deploy to staging environment"
        # Add your staging deployment commands here
        # e.g., deploy to Azure App Service, AWS, etc.

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-artifacts
        path: ./backend-artifacts
    
    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-artifacts
        path: ./frontend-artifacts
    
    - name: Deploy to production
      run: |
        echo "Deploy to production environment"
        # Add your production deployment commands here
        # e.g., deploy to Azure App Service, AWS, etc.
